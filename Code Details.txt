Microsoft Windows [Version 10.0.22631.5335]
(c) Microsoft Corporation. All rights reserved.
Microsoft Windows [Version 10.0.22631.5335]
(c) Microsoft Corporation. All rights reserved.

C:\Users\Lenovo\Desktop\next-app>npx create-next-app@latest
√ What is your project named? ... .
√ Would you like to use TypeScript? ... No / Yes
√ Would you like to use ESLint? ... No / Yes
√ Would you like to use Tailwind CSS? ... No / Yes
√ Would you like your code inside a `src/` directory? ... No / Yes     
√ Would you like to use App Router? (recommended) ... No / Yes
√ Would you like to use Turbopack for `next dev`? ... No / Yes
√ Would you like to customize the import alias (`@/*` by default)? ... No / Yes
Creating a new Next.js app in C:\Users\Lenovo\Desktop\next-app.        

Using npm.

Initializing project with template: app


Installing dependencies:
- react
- react-dom
- next


added 28 packages, and audited 29 packages in 3m

5 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities
Initialized a git repository.

Success! Created next-app at C:\Users\Lenovo\Desktop\next-app


C:\Users\Lenovo\Desktop\next-app>npm install prisma --save-dev

added 8 packages, and audited 37 packages in 40s

5 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities

C:\Users\Lenovo\Desktop\next-app>npx prisma init

✔ Your Prisma schema was created at prisma/schema.prisma
  You can now open it in your favorite editor.

warn Prisma would have added DATABASE_URL but it already exists in .env
warn You already have a .gitignore file. Don't forget to add `.env` in it to not commit any private information.

Next steps:
1. Set the DATABASE_URL in the .env file to point to your existing database. If your database has no tables yet, read https://pris.ly/d/getting-started
2. Set the provider of the datasource block in schema.prisma to match your database: postgresql, mysql, sqlite, sqlserver, mongodb or cockroachdb.
3. Run prisma db pull to turn your database schema into a Prisma schema.
4. Run prisma generate to generate the Prisma Client. You can then start querying your database.
5. Tip: Explore how you can extend the ORM with scalable connection pooling, global caching, and real-time database events. Read: https://pris.ly/cli/beyond-orm

More information in our documentation:
https://pris.ly/d/getting-started



C:\Users\Lenovo\Desktop\next-app>npm install @prisma/client

added 1 package, and audited 38 packages in 10s

5 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities

C:\Users\Lenovo\Desktop\next-app>npx prisma generate
Environment variables loaded from .env
Prisma schema loaded from prisma\schema.prisma

✔ Generated Prisma Client (v6.8.2) to .\node_modules\@prisma\client in 48ms

Start by importing your Prisma Client (See: https://pris.ly/d/importing-client)

Tip: Interested in query caching in just a few lines of code? Try Accelerate today! https://pris.ly/tip-3-accelerate


C:\Users\Lenovo\Desktop\next-app>npx prisma db push
Environment variables loaded from .env
Prisma schema loaded from prisma\schema.prisma
Datasource "db": PostgreSQL database "nextjscrud01", schema "public" at "ep-wandering-cherry-a50r639r-pooler.us-east-2.aws.neon.tech"

Your database is now in sync with your Prisma schema. Done in 15.55s

✔ Generated Prisma Client (v6.8.2) to .\node_modules\@prisma\client in
 58ms


C:\Users\Lenovo\Desktop\next-app>


DATABASE_URL="ADD_URL"
NODE_ENV= 'production'
